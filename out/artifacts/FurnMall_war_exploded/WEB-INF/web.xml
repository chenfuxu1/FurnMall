<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">

    <!--配置权限的过滤器，校验用户有没有登录-->
    <filter>
        <filter-name>AuthorityFilter</filter-name>
        <filter-class>com.cfx.furns.web.filter.AuthorityFilter</filter-class>
        <init-param>
            <!--这里配置需要放行的 url-->
            <param-name>excludedUrls</param-name>
            <param-value>/views/manage/manage_login.jsp,/views/member/login.jsp</param-value>
        </init-param>
    </filter>

    <filter-mapping>
        <filter-name>AuthorityFilter</filter-name>
        <!--1.这里配置需要拦截的 url 路径 -->
        <!--2.对于不需要拦截的路径就不去配置-->
        <!--3.如果配置的目录下面，有的需要拦截，有的不拦截，那么不拦截的在 excludedUrls 中单独配置-->
        <url-pattern>/views/cart/*</url-pattern>
        <url-pattern>/views/manage/*</url-pattern>
        <url-pattern>/views/member/*</url-pattern>
        <url-pattern>/views/order/*</url-pattern>

        <!--拦截 servlet 的配置，因为 servlet 也是属于 web 层-->
        <url-pattern>/cart</url-pattern>
        <url-pattern>/manage/furn</url-pattern>
        <url-pattern>/order</url-pattern>
    </filter-mapping>

    <filter>
        <filter-name>TransactionFilter</filter-name>
        <filter-class>com.cfx.furns.web.filter.TransactionFilter</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>TransactionFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <servlet>
        <servlet-name>RegisterServlet</servlet-name>
        <servlet-class>com.cfx.furns.web.servlet.RegisterServlet</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>RegisterServlet</servlet-name>
        <url-pattern>/register</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>LoginServlet</servlet-name>
        <servlet-class>com.cfx.furns.web.servlet.LoginServlet</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>LoginServlet</servlet-name>
        <url-pattern>/login</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>MemberServlet</servlet-name>
        <servlet-class>com.cfx.furns.web.servlet.MemberServlet</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>MemberServlet</servlet-name>
        <url-pattern>/member</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>AdminServlet</servlet-name>
        <servlet-class>com.cfx.furns.web.servlet.AdminServlet</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>AdminServlet</servlet-name>
        <url-pattern>/admin</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>FurnServlet</servlet-name>
        <servlet-class>com.cfx.furns.web.servlet.FurnServlet</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>FurnServlet</servlet-name>
        <!--这样设计方便后续过滤器直接过滤 manage 下的文件需要登录才能访问-->
        <url-pattern>/manage/furn</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>CustomerFurnServlet</servlet-name>
        <servlet-class>com.cfx.furns.web.servlet.CustomerFurnServlet</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>CustomerFurnServlet</servlet-name>
        <!--这样设计方便后续过滤器直接过滤 manage 下的文件需要登录才能访问-->
        <url-pattern>/customerFurn</url-pattern>
    </servlet-mapping>

    <!--配置 KaptchaServlet，可以生成验证码，同时将验证码文本保存到 session 中-->
    <servlet>
        <servlet-name>KaptchaServlet</servlet-name>
        <servlet-class>com.google.code.kaptcha.servlet.KaptchaServlet</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>KaptchaServlet</servlet-name>
        <!--这样设计方便后续过滤器直接过滤 manage 下的文件需要登录才能访问-->
        <url-pattern>/kaptcha</url-pattern>
    </servlet-mapping>

    <!--配置购物车的 servlet-->
    <servlet>
        <servlet-name>CartServlet</servlet-name>
        <servlet-class>com.cfx.furns.web.servlet.CartServlet</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>CartServlet</servlet-name>
        <url-pattern>/cart</url-pattern>
    </servlet-mapping>

    <!--配置订单的 servlet-->
    <servlet>
        <servlet-name>OrderServlet</servlet-name>
        <servlet-class>com.cfx.furns.web.servlet.OrderServlet</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>OrderServlet</servlet-name>
        <url-pattern>/order</url-pattern>
    </servlet-mapping>
</web-app>